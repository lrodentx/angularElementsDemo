{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/my-todo/my-todo.component.css","webpack:///./src/app/my-todo/my-todo.component.html","webpack:///./src/app/my-todo/my-todo.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,+DAA+D,+H;;;;;;;;;;;ACA/D,yJAAyJ,SAAS,sD;;;;;;;;;;;;;;;;;ACAxH;AAO1C;IALA;QAME,UAAK,GAAG,oCAAoC,CAAC;IAC/C,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACiB;AAC9B;AACW;AAEM;AACf;AAgB/C;IACI,mBAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAE3C,iCAAa,GAAb;QACI,IAAM,aAAa,GAAG,6EAAmB,CAAC,0EAAe,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;QACxF,cAAc,CAAC,MAAM,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC;IAC3D,CAAC;IANQ,SAAS;QAdrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,0EAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;YACzB,eAAe,EAAE,CAAC,0EAAe,CAAC;YAClC,OAAO,EAAE,CAAC,oEAAsB,CAAC;SAClC,CAAC;+EAEgC,sDAAQ;OAD7B,SAAS,CAOrB;IAAD,gBAAC;CAAA;AAPqB;;;;;;;;;;;;ACtBtB,+DAA+D,+I;;;;;;;;;;;ACA/D,yYAAyY,MAAM,mLAAmL,gBAAgB,YAAY,wCAAwC,wD;;;;;;;;;;;;;;;;;ACAjkB;AASrE;IAGE;QAFA,YAAO,GAAa,EAAE,CAAC;IAER,CAAC;IAEhB,kCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAG,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;IACzD,CAAC;IAED,mCAAS,GAAT;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACpB,CAAC;IAZU,eAAe;QAN3B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAGxC,CAAC;;OACW,eAAe,CAa3B;IAAD,sBAAC;CAAA;AAb2B;;;;;;;;;;;;;ACT5B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div style=\\\"text-align:center\\\">\\r\\n  <h3>\\r\\n    Welcome to {{ title }}!\\r\\n  </h3>\\r\\n</div>\\r\\n<app-my-todo></app-my-todo>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Angular Elements in ASP.NET Core!!';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule, Injector, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { createCustomElement } from '@angular/elements';\r\n\r\nimport { MyTodoComponent } from './my-todo/my-todo.component';\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MyTodoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [MyTodoComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class AppModule {\r\n    constructor(private injector: Injector) { }\r\n\r\n    ngDoBootstrap() {\r\n        const myTodoElement = createCustomElement(MyTodoComponent, { injector: this.injector });\r\n        customElements.define('mytodo-element', myTodoElement);\r\n    }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LXRvZG8vbXktdG9kby5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<section>\\r\\n    <header>\\r\\n        <h3>My Todos</h3>\\r\\n        <input placeholder=\\\"Type in a TODO\\\" autofocus=\\\"\\\" [(ngModel)]=\\\"newTodo\\\" (keyup.enter)=\\\"addMyTodo()\\\">\\r\\n    </header>\\r\\n    <br />\\r\\n    <section *ngIf=\\\"myTodos.length > 0\\\">\\r\\n        <ul>\\r\\n            <li *ngFor=\\\"let todo of myTodos\\\">\\r\\n                <div>\\r\\n                    <label>{{todo}}</label>\\r\\n                </div>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </section>\\r\\n    <footer *ngIf=\\\"myTodos.length > 0\\\">\\r\\n        <span>\\r\\n            <strong>{{myTodos.length}}</strong> {{myTodos.length == 1 ? 'item' : 'items'}} left\\r\\n        </span>\\r\\n    </footer>\\r\\n</section>\"","import { Component, OnInit, ViewEncapsulation } from \"@angular/core\";\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: \"app-my-todo\",\r\n  templateUrl: \"./my-todo.component.html\",\r\n  styleUrls: [\"./my-todo.component.css\"]\r\n  // encapsulation: ViewEncapsulation.Native\r\n})\r\nexport class MyTodoComponent implements OnInit {\r\n  myTodos: string[] = [];\r\n  newTodo: string;\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.myTodos = [\"Pay Bills\", \"Clean Car\", \"Pay Taxes\"];\r\n  }\r\n\r\n  addMyTodo() {\r\n    this.myTodos.push(this.newTodo);\r\n    this.newTodo = \"\";\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}